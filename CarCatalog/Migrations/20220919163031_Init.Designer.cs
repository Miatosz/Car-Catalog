// <auto-generated />
using System;
using CarCatalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarCatalog.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220919163031_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarCatalog.Data.Models.BodyStyle", b =>
                {
                    b.Property<int>("BodyStyleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyStyleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarID")
                        .HasColumnType("int");

                    b.HasKey("BodyStyleID");

                    b.HasIndex("CarID");

                    b.ToTable("BodyStyles");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EndProductionDate")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("StartProductionDate")
                        .HasColumnType("int");

                    b.HasKey("CarID");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Drivetrain", b =>
                {
                    b.Property<int>("DrivetrainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarID")
                        .HasColumnType("int");

                    b.Property<string>("DrivetrainName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrivetrainID");

                    b.HasIndex("CarID");

                    b.ToTable("Drivetrains");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.EngineType", b =>
                {
                    b.Property<int>("EngineTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EngineTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EngineTypeID");

                    b.ToTable("EngineTypes");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.FuelType", b =>
                {
                    b.Property<int>("FuelTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FuelTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FuelTypeID");

                    b.ToTable("FuelTypes");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturerID");

                    b.HasIndex("CountryID");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.TransmissionType", b =>
                {
                    b.Property<int>("TransmissionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarID")
                        .HasColumnType("int");

                    b.Property<string>("TransmissionTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransmissionTypeID");

                    b.HasIndex("CarID");

                    b.ToTable("TransmissionTypes");
                });

            modelBuilder.Entity("CarCatalog.Models.Engine", b =>
                {
                    b.Property<int>("EngineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarID")
                        .HasColumnType("int");

                    b.Property<int>("EngineCapacity")
                        .HasColumnType("int");

                    b.Property<int>("EnginePower")
                        .HasColumnType("int");

                    b.Property<int>("EngineTorque")
                        .HasColumnType("int");

                    b.Property<int>("EngineTypeID")
                        .HasColumnType("int");

                    b.Property<int>("FuelTypeID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCylinders")
                        .HasColumnType("int");

                    b.HasKey("EngineID");

                    b.HasIndex("CarID");

                    b.HasIndex("EngineTypeID");

                    b.HasIndex("FuelTypeID");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.BodyStyle", b =>
                {
                    b.HasOne("CarCatalog.Data.Models.Car", null)
                        .WithMany("BodyStyles")
                        .HasForeignKey("CarID");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Car", b =>
                {
                    b.HasOne("CarCatalog.Data.Models.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Drivetrain", b =>
                {
                    b.HasOne("CarCatalog.Data.Models.Car", null)
                        .WithMany("Drivetrains")
                        .HasForeignKey("CarID");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Manufacturer", b =>
                {
                    b.HasOne("CarCatalog.Data.Models.Country", "CountryOrigin")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryOrigin");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.TransmissionType", b =>
                {
                    b.HasOne("CarCatalog.Data.Models.Car", null)
                        .WithMany("TransmissionTypes")
                        .HasForeignKey("CarID");
                });

            modelBuilder.Entity("CarCatalog.Models.Engine", b =>
                {
                    b.HasOne("CarCatalog.Data.Models.Car", null)
                        .WithMany("AvailableEngines")
                        .HasForeignKey("CarID");

                    b.HasOne("CarCatalog.Data.Models.EngineType", "EngineType")
                        .WithMany()
                        .HasForeignKey("EngineTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCatalog.Data.Models.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngineType");

                    b.Navigation("FuelType");
                });

            modelBuilder.Entity("CarCatalog.Data.Models.Car", b =>
                {
                    b.Navigation("AvailableEngines");

                    b.Navigation("BodyStyles");

                    b.Navigation("Drivetrains");

                    b.Navigation("TransmissionTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
